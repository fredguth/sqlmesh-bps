2024-05-27 23:21:29,835 - MainThread - sqlmesh.core.config.connection - INFO - Creating new DuckDB adapter for data files: {'db.db'} (connection.py:294)
2024-05-27 23:21:30,017 - MainThread - sqlmesh.core.config.connection - INFO - Using existing DuckDB adapter due to overlapping data file: db.db (connection.py:290)
2024-05-27 23:21:30,119 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Listing data objects in schema db.sqlmesh__dtb (evaluator.py:265)
2024-05-27 23:21:30,119 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:1822)
2024-05-27 23:21:30,120 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:1822)
2024-05-27 23:21:30,120 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM information_schema.tables WHERE table_schema = 'sqlmesh__dtb' AND table_name IN ('dtb__territorio__3564516099__temp', 'dtb__territorio__3564516099') (base.py:1822)
2024-05-27 23:21:30,138 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Listing data objects in schema db.sqlmesh__bps (evaluator.py:265)
2024-05-27 23:21:30,138 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:1822)
2024-05-27 23:21:30,138 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:1822)
2024-05-27 23:21:30,139 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM information_schema.tables WHERE table_schema = 'sqlmesh__bps' AND table_name IN ('bps__compras__4287539635', 'bps__unidades__25746938', 'bps__materiais__3533423352__temp', 'bps__compras__4287539635__temp', 'bps__unidades__25746938__temp', 'bps__materiais__3533423352') (base.py:1822)
2024-05-27 23:21:30,143 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Listing data objects in schema db.sqlmesh__siasg (evaluator.py:265)
2024-05-27 23:21:30,143 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:1822)
2024-05-27 23:21:30,143 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:1822)
2024-05-27 23:21:30,144 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM information_schema.tables WHERE table_schema = 'sqlmesh__siasg' AND table_name IN ('siasg__materiais__382104304', 'siasg__compras__1111392831', 'siasg__unidades__3458370508', 'siasg__uasgs__3746688468__temp', 'siasg__materiais__382104304__temp', 'siasg__unidades__3458370508__temp', 'siasg__uasgs__3746688468', 'siasg__compras__1111392831__temp') (base.py:1822)
2024-05-27 23:21:30,152 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating schema 'db.sqlmesh__siasg' (evaluator.py:849)
2024-05-27 23:21:30,152 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE SCHEMA IF NOT EXISTS "db"."sqlmesh__siasg" (base.py:1822)
2024-05-27 23:21:30,152 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating schema 'db.sqlmesh__bps' (evaluator.py:849)
2024-05-27 23:21:30,152 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE SCHEMA IF NOT EXISTS "db"."sqlmesh__bps" (base.py:1822)
2024-05-27 23:21:30,152 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating schema 'db.sqlmesh__dtb' (evaluator.py:849)
2024-05-27 23:21:30,152 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE SCHEMA IF NOT EXISTS "db"."sqlmesh__dtb" (base.py:1822)
2024-05-27 23:21:30,164 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating table 'db.sqlmesh__bps.bps__compras__4287539635__temp' (evaluator.py:1155)
2024-05-27 23:21:30,165 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE TABLE IF NOT EXISTS "db"."sqlmesh__bps"."bps__compras__4287539635__temp" AS SELECT CAST("_q_0"."data_compra" AS DATE) AS "data_compra", "_q_0"."codigo_compra" AS "codigo_compra", "_q_0"."codigo_item_compra" AS "codigo_item_compra", "_q_0"."codigo_item_catalogo" AS "codigo_item_catalogo", MD5(CONCAT("_q_0"."codigo_pdm", ';', "_q_0"."sigla_tipo_unidade_fornecimento", ';', "_q_0"."unidade_medida", ';', "_q_0"."capacidade_unidade_fornecimento")) AS "codigo_unidade_fornecimento", "_q_0"."quantidade" AS "quantidade", CAST("_q_0"."preco_unitario" AS DECIMAL(18, 2)) AS "preco_unitario", "_q_0"."codigo_uasg" AS "codigo_uasg", "_q_0"."cnpj_fornecedor" AS "cnpj_fornecedor", "_q_0"."fornecedor" AS "fornecedor", "_q_0"."marca_fabricante" AS "marca_fabricante" FROM (SELECT DISTINCT "c"."codigo_compra" AS "codigo_compra", "c"."codigo_item_compra" AS "codigo_item_compra", "c"."codigo_item_catalogo" AS "codigo_item_catalogo", "c"."sigla_tipo_unidade_fornecimento" AS "sigla_tipo_unidade_fornecimento", "c"."tipo_unidade_fornecimento" AS "tipo_unidade_fornecimento", "c"."unidade_medida" AS "unidade_medida", "c"."capacidade_unidade_fornecimento" AS "capacidade_unidade_fornecimento", "c"."quantidade" AS "quantidade", "c"."preco_unitario" AS "preco_unitario", "c"."cnpj_fornecedor" AS "cnpj_fornecedor", "c"."fornecedor" AS "fornecedor", "c"."marca_fabricante" AS "marca_fabricante", "c"."codigo_uasg" AS "codigo_uasg", "c"."data_compra" AS "data_compra", "m"."codigo_pdm" AS "codigo_pdm", "m"."descricao_item" AS "descricao_item" FROM (SELECT "compras"."idCompra" AS "codigo_compra", "compras"."idItemCompra" AS "codigo_item_compra", "compras"."codigoItemCatalogo" AS "codigo_item_catalogo", "compras"."siglaUnidadeFornecimento" AS "sigla_tipo_unidade_fornecimento", "compras"."nomeUnidadeFornecimento" AS "tipo_unidade_fornecimento", "compras"."siglaUnidadeMedida" AS "unidade_medida", "compras"."capacidadeUnidadeFornecimento" AS "capacidade_unidade_fornecimento", "compras"."quantidade" AS "quantidade", "compras"."precoUnitario" AS "preco_unitario", "compras"."niFornecedor" AS "cnpj_fornecedor", "compras"."nomeFornecedor" AS "fornecedor", "compras"."marca" AS "marca_fabricante", "compras"."codigoUasg" AS "codigo_uasg", "compras"."dataCompra" AS "data_compra" FROM "db"."sqlmesh__siasg"."siasg__compras__1111392831" AS "compras" WHERE FALSE LIMIT 0) AS "c" LEFT JOIN "db"."sqlmesh__bps"."bps__materiais__3533423352" AS "m" ON "c"."codigo_item_catalogo" = "m"."codigo_item_catalogo" WHERE FALSE LIMIT 0) AS "_q_0" WHERE FALSE ORDER BY "data_compra", "codigo_compra", "codigo_item_compra" LIMIT 0 (base.py:1822)
2024-05-27 23:21:30,178 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating table 'db.sqlmesh__bps.bps__compras__4287539635' (evaluator.py:1155)
2024-05-27 23:21:30,179 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE TABLE IF NOT EXISTS "db"."sqlmesh__bps"."bps__compras__4287539635" AS SELECT CAST("_q_0"."data_compra" AS DATE) AS "data_compra", "_q_0"."codigo_compra" AS "codigo_compra", "_q_0"."codigo_item_compra" AS "codigo_item_compra", "_q_0"."codigo_item_catalogo" AS "codigo_item_catalogo", MD5(CONCAT("_q_0"."codigo_pdm", ';', "_q_0"."sigla_tipo_unidade_fornecimento", ';', "_q_0"."unidade_medida", ';', "_q_0"."capacidade_unidade_fornecimento")) AS "codigo_unidade_fornecimento", "_q_0"."quantidade" AS "quantidade", CAST("_q_0"."preco_unitario" AS DECIMAL(18, 2)) AS "preco_unitario", "_q_0"."codigo_uasg" AS "codigo_uasg", "_q_0"."cnpj_fornecedor" AS "cnpj_fornecedor", "_q_0"."fornecedor" AS "fornecedor", "_q_0"."marca_fabricante" AS "marca_fabricante" FROM (SELECT DISTINCT "c"."codigo_compra" AS "codigo_compra", "c"."codigo_item_compra" AS "codigo_item_compra", "c"."codigo_item_catalogo" AS "codigo_item_catalogo", "c"."sigla_tipo_unidade_fornecimento" AS "sigla_tipo_unidade_fornecimento", "c"."tipo_unidade_fornecimento" AS "tipo_unidade_fornecimento", "c"."unidade_medida" AS "unidade_medida", "c"."capacidade_unidade_fornecimento" AS "capacidade_unidade_fornecimento", "c"."quantidade" AS "quantidade", "c"."preco_unitario" AS "preco_unitario", "c"."cnpj_fornecedor" AS "cnpj_fornecedor", "c"."fornecedor" AS "fornecedor", "c"."marca_fabricante" AS "marca_fabricante", "c"."codigo_uasg" AS "codigo_uasg", "c"."data_compra" AS "data_compra", "m"."codigo_pdm" AS "codigo_pdm", "m"."descricao_item" AS "descricao_item" FROM (SELECT "compras"."idCompra" AS "codigo_compra", "compras"."idItemCompra" AS "codigo_item_compra", "compras"."codigoItemCatalogo" AS "codigo_item_catalogo", "compras"."siglaUnidadeFornecimento" AS "sigla_tipo_unidade_fornecimento", "compras"."nomeUnidadeFornecimento" AS "tipo_unidade_fornecimento", "compras"."siglaUnidadeMedida" AS "unidade_medida", "compras"."capacidadeUnidadeFornecimento" AS "capacidade_unidade_fornecimento", "compras"."quantidade" AS "quantidade", "compras"."precoUnitario" AS "preco_unitario", "compras"."niFornecedor" AS "cnpj_fornecedor", "compras"."nomeFornecedor" AS "fornecedor", "compras"."marca" AS "marca_fabricante", "compras"."codigoUasg" AS "codigo_uasg", "compras"."dataCompra" AS "data_compra" FROM "db"."sqlmesh__siasg"."siasg__compras__1111392831" AS "compras" WHERE FALSE LIMIT 0) AS "c" LEFT JOIN "db"."sqlmesh__bps"."bps__materiais__3533423352" AS "m" ON "c"."codigo_item_catalogo" = "m"."codigo_item_catalogo" WHERE FALSE LIMIT 0) AS "_q_0" WHERE FALSE ORDER BY "data_compra", "codigo_compra", "codigo_item_compra" LIMIT 0 (base.py:1822)
2024-05-27 23:21:30,180 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."data_compra" IS 'data da compra (homologação do processo de compra)' (base.py:1822)
2024-05-27 23:21:30,181 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_compra" IS 'Identificador da compra (siasg)' (base.py:1822)
2024-05-27 23:21:30,181 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_item_compra" IS 'Identificador do item da compra (siasg)' (base.py:1822)
2024-05-27 23:21:30,181 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_item_catalogo" IS 'Código do item no catálogo (siasg); código da categoria do material' (base.py:1822)
2024-05-27 23:21:30,181 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_unidade_fornecimento" IS 'Identificador da unidade de fornecimento (bps)' (base.py:1822)
2024-05-27 23:21:30,182 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."quantidade" IS 'quantidade compra (em unidades de fornecimento)' (base.py:1822)
2024-05-27 23:21:30,182 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."preco_unitario" IS 'preço de uma unidade de fornecimento do material comprado' (base.py:1822)
2024-05-27 23:21:30,182 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_uasg" IS 'identificador da unidade de gestão no governo (siasg)' (base.py:1822)
2024-05-27 23:21:30,182 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."cnpj_fornecedor" IS 'CNPJ do fornecedor (estrangeiros não possuem CNPJ)' (base.py:1822)
2024-05-27 23:21:30,182 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."fornecedor" IS 'nome do fornecedor' (base.py:1822)
2024-05-27 23:21:30,183 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."marca_fabricante" IS 'marca do item comprado' (base.py:1822)
2024-05-27 23:21:30,206 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"db"."bps"."compras": 4192525164> (evaluator.py:479)
2024-05-27 23:21:30,216 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2024-05-27 00:00:00+00:00, 2024-05-28 00:00:00+00:00) into db.sqlmesh__bps.bps__compras__4287539635' (evaluator.py:504)
2024-05-27 23:21:30,216 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "db"."sqlmesh__bps"."bps__compras__4287539635" (base.py:1822)
2024-05-27 23:21:30,218 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE TABLE "db"."sqlmesh__bps"."bps__compras__4287539635" AS SELECT CAST("_q_0"."data_compra" AS DATE) AS "data_compra", "_q_0"."codigo_compra" AS "codigo_compra", "_q_0"."codigo_item_compra" AS "codigo_item_compra", "_q_0"."codigo_item_catalogo" AS "codigo_item_catalogo", MD5(CONCAT("_q_0"."codigo_pdm", ';', "_q_0"."sigla_tipo_unidade_fornecimento", ';', "_q_0"."unidade_medida", ';', "_q_0"."capacidade_unidade_fornecimento")) AS "codigo_unidade_fornecimento", "_q_0"."quantidade" AS "quantidade", CAST("_q_0"."preco_unitario" AS DECIMAL(18, 2)) AS "preco_unitario", "_q_0"."codigo_uasg" AS "codigo_uasg", "_q_0"."cnpj_fornecedor" AS "cnpj_fornecedor", "_q_0"."fornecedor" AS "fornecedor", "_q_0"."marca_fabricante" AS "marca_fabricante" FROM (SELECT DISTINCT "c"."codigo_compra" AS "codigo_compra", "c"."codigo_item_compra" AS "codigo_item_compra", "c"."codigo_item_catalogo" AS "codigo_item_catalogo", "c"."sigla_tipo_unidade_fornecimento" AS "sigla_tipo_unidade_fornecimento", "c"."tipo_unidade_fornecimento" AS "tipo_unidade_fornecimento", "c"."unidade_medida" AS "unidade_medida", "c"."capacidade_unidade_fornecimento" AS "capacidade_unidade_fornecimento", "c"."quantidade" AS "quantidade", "c"."preco_unitario" AS "preco_unitario", "c"."cnpj_fornecedor" AS "cnpj_fornecedor", "c"."fornecedor" AS "fornecedor", "c"."marca_fabricante" AS "marca_fabricante", "c"."codigo_uasg" AS "codigo_uasg", "c"."data_compra" AS "data_compra", "m"."codigo_pdm" AS "codigo_pdm", "m"."descricao_item" AS "descricao_item" FROM (SELECT "compras"."idCompra" AS "codigo_compra", "compras"."idItemCompra" AS "codigo_item_compra", "compras"."codigoItemCatalogo" AS "codigo_item_catalogo", "compras"."siglaUnidadeFornecimento" AS "sigla_tipo_unidade_fornecimento", "compras"."nomeUnidadeFornecimento" AS "tipo_unidade_fornecimento", "compras"."siglaUnidadeMedida" AS "unidade_medida", "compras"."capacidadeUnidadeFornecimento" AS "capacidade_unidade_fornecimento", "compras"."quantidade" AS "quantidade", "compras"."precoUnitario" AS "preco_unitario", "compras"."niFornecedor" AS "cnpj_fornecedor", "compras"."nomeFornecedor" AS "fornecedor", "compras"."marca" AS "marca_fabricante", "compras"."codigoUasg" AS "codigo_uasg", "compras"."dataCompra" AS "data_compra" FROM "db"."sqlmesh__siasg"."siasg__compras__1111392831" AS "compras") AS "c" LEFT JOIN "db"."sqlmesh__bps"."bps__materiais__3533423352" AS "m" ON "c"."codigo_item_catalogo" = "m"."codigo_item_catalogo") AS "_q_0" ORDER BY "data_compra", "codigo_compra", "codigo_item_compra" (base.py:1822)
2024-05-27 23:21:31,006 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."data_compra" IS 'data da compra (homologação do processo de compra)' (base.py:1822)
2024-05-27 23:21:31,007 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_compra" IS 'Identificador da compra (siasg)' (base.py:1822)
2024-05-27 23:21:31,007 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_item_compra" IS 'Identificador do item da compra (siasg)' (base.py:1822)
2024-05-27 23:21:31,007 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_item_catalogo" IS 'Código do item no catálogo (siasg); código da categoria do material' (base.py:1822)
2024-05-27 23:21:31,008 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_unidade_fornecimento" IS 'Identificador da unidade de fornecimento (bps)' (base.py:1822)
2024-05-27 23:21:31,008 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."quantidade" IS 'quantidade compra (em unidades de fornecimento)' (base.py:1822)
2024-05-27 23:21:31,008 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."preco_unitario" IS 'preço de uma unidade de fornecimento do material comprado' (base.py:1822)
2024-05-27 23:21:31,008 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."codigo_uasg" IS 'identificador da unidade de gestão no governo (siasg)' (base.py:1822)
2024-05-27 23:21:31,008 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."cnpj_fornecedor" IS 'CNPJ do fornecedor (estrangeiros não possuem CNPJ)' (base.py:1822)
2024-05-27 23:21:31,008 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."fornecedor" IS 'nome do fornecedor' (base.py:1822)
2024-05-27 23:21:31,009 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__bps"."bps__compras__4287539635"."marca_fabricante" IS 'marca do item comprado' (base.py:1822)
2024-05-27 23:21:31,009 - MainThread - sqlmesh.core.state_sync.engine_adapter - INFO - Adding interval (1716768000000, 1716854400000) for snapshot SnapshotId<"db"."bps"."compras": 4192525164> (engine_adapter.py:651)
2024-05-27 23:21:31,018 - MainThread - sqlmesh.core.state_sync.common - INFO - Promoting environment 'dev' (common.py:120)
2024-05-27 23:21:31,064 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating schema 'db.bps__dev' (evaluator.py:849)
2024-05-27 23:21:31,064 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE SCHEMA IF NOT EXISTS "db"."bps__dev" (base.py:1822)
2024-05-27 23:21:31,065 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Updating view 'db.bps__dev.compras' to point at table 'db.sqlmesh__bps.bps__compras__4287539635' (evaluator.py:1111)
2024-05-27 23:21:31,065 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE VIEW "db"."bps__dev"."compras" AS SELECT * FROM "db"."sqlmesh__bps"."bps__compras__4287539635" (base.py:1822)
2024-05-27 23:21:31,066 - MainThread - sqlmesh.core.state_sync.common - INFO - Finalizing environment 'dev' (common.py:198)
2024-05-27 23:21:31,099 - MainThread - root - INFO - Shutting down the event dispatcher (dispatcher.py:159)
